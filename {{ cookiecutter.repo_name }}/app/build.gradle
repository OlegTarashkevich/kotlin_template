apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

android {

    lintOptions {
        checkReleaseBuilds false
        // Or, if you prefer, you can continue to check for errors in release builds,
        // but continue the build even when errors are found:
        abortOnError false
    }

    dexOptions {
        javaMaxHeapSize "8g"
        jumboMode = true
        preDexLibraries = false
    }

    buildToolsVersion buildToolsVer
    compileSdkVersion compileSdkVer

    def versionMajor = 1
    def versionMinor = 0
    def versionPatch = "git rev-list HEAD --count".execute().text.trim()
    def versionBuild = 1

    defaultConfig {
        applicationId "$application_id"
        minSdkVersion minSdkVer
        targetSdkVersion targetSdkVer
        versionCode versionBuild
        versionName "${versionMajor}.${versionMinor}.${versionPatch}-${versionBuild}"
        archivesBaseName = "in Grabber $versionName"
        vectorDrawables.useSupportLibrary = true
        multiDexEnabled true
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        debug {
            minifyEnabled false
            debuggable true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        release {
            multiDexEnabled true
            debuggable false
            minifyEnabled true
            zipAlignEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    lintOptions {
        abortOnError false
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
        test.java.srcDirs += 'src/test/kotlin'
    }

    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
    }
}

ext {
    supportLibraryVersion = '27.0.1'
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])

    def deps = rootProject.ext.deps

    //kotlin
    implementation deps.kotlinJRE
    implementation deps.kotlinReflect
    implementation deps.anko

    //android
    implementation deps.appCompatSupport
    implementation deps.designAndroid

    {% if cookiecutter.use_tests == 'yes' -%}
    //unit tests
    testCompile deps.junit
    testCompile deps.robolectric
    testCompile deps.mockitoCore
    testCompile deps.kotlinTestJunit
    testCompile deps.kotlinTest
    testCompile deps.mockitoKotlin

    //automation tests
    androidTestCompile deps.annotations
    androidTestCompile deps.espressoCore
    androidTestCompile deps.runnerTest
    {%- endif %}

    //networking
    {% if cookiecutter.use_retrofit == 'yes' -%}
    implementation deps.retrofit
    implementation deps.converterGson
    implementation deps.loggingInterceptor
    {%- endif %}
    {% if cookiecutter.use_rx == 'yes' -%}
    implementation deps.retrofitRxJava
    {%- endif %}

    //image caching and downloading
    implementation deps.picasso

    {% if cookiecutter.use_rx == 'yes' -%}
    //rx
    implementation deps.rxJava
    implementation deps.rxAndroid
    implementation deps.javaxAnnotation
    {%- endif %}

}
